@using System.Security.Claims;

<div class="container">
    <div class="text-center ">
        <h2>@Model.Title</h2>
        <p>Category: @Model.Category</p>

        <div class="mt-4">
            <img src="@Model.Picture" class="img-fluid" alt="Article Image">
        </div>
        <div class="mt-4 text-right">
        <svg xmlns="http://www.w3.org/2000/svg" height="2em" viewBox="0 0 576 512">
            <style>
                svg {
                    fill: #fff700
                }
            </style>
            <path d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z" />
        </svg>
        <span id="starCount">@Model.Stars</span>
        </div>
        <div class="mt-4">
            <p>@Model.Description</p>
        </div>
        <div class="mt-4" style="display: flex; justify-content: space-between; align-items: center; font-size: 0.8rem;">
            @if (@Model.UpdatedAt != null && @Model.CreatedAt != null)
            {
                <p>Updated At: @Model.UpdatedAt.ToString("MMMM dd, yyyy h:mm tt")</p>
                <p>Created At: @Model.CreatedAt.ToString("MMMM dd, yyyy h:mm tt")</p>
            }
            else
            {
                <p>At some point in human history</p>
            }
        </div>
    </div>
   
    <hr>
    <!-- Display Comments -->
    <h2>Comments</h2>
    <div id="comments-container"">
        @foreach (var comment in Model.Comments)
        {
            <div class="comment">
                <div>
                    <div>
                        @if (comment.User != null)
                        {
                            <span style="font-weight: bold;"></span> @comment.Description
                        }
                        else
                        {
                            <span style="font-weight: bold;">@comment.UserName</span> <p>  &nbsp; @comment.Description</p>
                        }
                    </div>
                    <div>
                        @if (comment.UpdatedAt != null)
                        {
                            <p>@comment.UpdatedAt.ToString("MMMM dd, yyyy h:mm tt")</p>
                        }
                        else
                        {
                            <p>At some point in human history</p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Add Comment Form -->
    @if (User.Identity.IsAuthenticated)
    {
        <form id="addCommentForm">
            <div class="form-group">
                <label for="commentDescription">Add a comment:</label>
                <textarea class="form-control" id="commentDescription" name="commentDescription" rows="3"></textarea>
            </div>
            <br>
            <button type="button" class="btn btn-secondary w-100" onclick="addComment(@Model.ArticleId)">Add Comment</button>
        </form>
    }
    else
    {
        <span class="text-muted" style="font-size: 16px;">(Login to comment! 👉)</span>
    }


    <hr>

    <!-- Related Articles -->
    <h2>Related Articles</h2>
    @if (ViewBag.ArticleRepository.GetRelatedArticles(Model.ArticleId).Count > 0)
    {
        <div class="overflow-container" style="overflow-x: auto; white-space: nowrap; display: flex;">
            @{
                var relatedArticles = ViewBag.ArticleRepository.GetRelatedArticles(Model.ArticleId);
                foreach (var article in relatedArticles)
                {
                    @if (article.isDisabled == false && article.isDisabled != null)
                    {
                        <div class="card" style="width: 18rem; margin-right: 10px;">
                            <img src="@article.Picture" class="card-img-top" alt="Article Image" style="height: 200px; object-fit: cover;">
                        <div class="card-body">
                            <h5 class="card-title title-container">@article.Title</h5>
                            <p class="card-text description-container">@Truncate(article.Description, 100)</p>
                            <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="btn btn-primary">Read More</a>
                        </div>
                    </div>
                    }
                }
            }
        </div>
    }
    else
    {
        <p>No related articles available.</p>
    }

    @functions {
        public static string Truncate(string value, int maxLength)
        {
            if (string.IsNullOrEmpty(value) || value.Length <= maxLength)
            {
                return value;
            }
            return value.Substring(0, maxLength) + "...";
        }
    }
    <br>
    <!-- Most Starred Articles -->
    <h2>Top 3 Articles</h2>
    <br>
    <div class="overflow-container" style="white-space: nowrap;">
        <div class="row">
            @{
                var mostStarredArticles = ViewBag.ArticleRepository.GetMostStarredArticles();
                foreach (var article in mostStarredArticles)
                {
            @if (article.isDisabled == false && article.isDisabled != null)
            {
                    <div class="col-md-4 mb-3">
                        <div class="card">
                            <img src="@article.Picture" class="card-img-top" alt="Article Image" style="height: 200px; object-fit: cover;">
                            <div class="card-body">
                                <h5 class="card-title title-container">@article.Title</h5>
                                <p class="card-text description-container">@article.Description</p>
                                <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="btn btn-primary">Read More</a>
                                <p class="card-text">
                                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 576 512">
                                        <style>
                                            svg {
                                                fill: #fff700
                                            }</style>
                                        <path d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z" />
                                    </svg> <span class="star-count" data-article-id="@article.ArticleId">@article.Stars</span>
                                </p>
                            </div>
                        </div>
                    </div>
                    }
                }
            }
        </div>
    </div>


</div>
<style>
    .comments-section {
        margin-top: 20px;
    }

    .article-container {
        position: relative;
    }

    .article-line {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        height: 100%;
        border-left: 1px solid #ccc;
    }

    .comments-container {
        padding: 15px;
        background-color: #f9f9f9;
        margin-top: 10px;
        position: relative;
    }

    .comment {
        margin-bottom: 15px;
        position: relative;
        border: 1px solid #ccc;
        padding: 15px;
    }

        .comment span {
            font-weight: bold;
        }

        .comment p {
            margin: 0;
        }

        .comment:not(:last-child)::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 50%;
            height: 100%;
            border-left: 1px solid #ccc;
        }

        .comment div {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

    #addCommentForm {
        margin-top: 20px;
    }

        #addCommentForm textarea {
            resize: vertical;
        }

    .related-articles-container {
        display: flex;
        overflow-x: auto;
        margin-top: 20px;
    }

    .related-article-card {
        width: 18rem;
        margin-right: 10px;
    }

    .top-articles-container {
        overflow-x: auto;
        margin-top: 20px;
    }

    .top-article-card {
        width: 18rem;
        margin-right: 10px;
    }


    .title-container, .description-container {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        word-wrap: break-word;
    }
</style>


<script>
    function addComment(articleId) {
        var commentDescription = $('#commentDescription').val();
        $.ajax({
            url: '/Article/AddComment',
            method: 'POST',
            data: {
                articleId: articleId,
                commentDescription: commentDescription
            },
            success: function (result) {
                // Optionally handle success
                $('#comments-container').load(location.href + ' #comments-container');
            },
            error: function (error) {
                console.error('Error adding comment:', error);
            }
        });
    }
</script>