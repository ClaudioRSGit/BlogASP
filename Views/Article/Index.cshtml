@using System.Globalization;
@model List<BlogASP.Models.ArticleModel>

<div class="container-fluid">
<div class="row">
    <div class="col-md-3">
        
            
        <!-- Search Box and Button -->
        <div class="mt-4">
                <h4>Select a Title</h4>
                <input type="text" id="searchTerm" class="form-control mt-4" placeholder="Enter title">
            <br />
            <button id="searchButton" class="btn btn-primary w-100">Search</button>
        </div>
            
        <div id="filteredArticles" class="mt-4">
            <h4>Select a Category</h4>
                <a href="#" class="btn btn-primary category-link mt-2 me-1" data-category="all">All</a>
            @foreach (var category in Model.Where(a => a.isDisabled == false).Select(a => a.Category).Distinct())
            {
                <a href="#" class="btn btn-outline-primary category-link mt-2 me-1" data-category="@category">@category</a>
            }

            <hr />
            <h4>Select a Year</h4>
            <select class="form-control" id="yearPicker">
                @for (int year = DateTime.Now.Year; year >= 2020; year--)
                {
                    <option value="@year">@year</option>
                }
            </select>

            <hr />
            <h4>Select a Month</h4>

            <select class="form-control" id="monthPicker">
                @for (int month = 1; month <= 12; month++)
                {
                    <option value="@month">@DateTimeFormatInfo.CurrentInfo.GetMonthName(month)</option>
                }
            </select>
                <div class="sticky-image">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a href="@Url.Action("Create", "Article")">
                            <img src="/addArticle.png" alt="Add Post" style="width: 75px; height: 75px;">
                        </a>
                    }
                </div>
            </div>
    </div>

    <div class="col-md-9">
        <div class="row" id="article-container">
            <div class="mt-4 normal">
                    @foreach (var article in Model.OrderByDescending(a => a.Stars).Take(1))
                    {
                        @if (article.isDisabled == false && article.isDisabled != null)
                        {
                            <div class="category-article" data-category="@article.Category">
                                <h3>
                                    Hot Article <img src="https://media.tenor.com/F3xUrsjCSzUAAAAi/fire.gif" height="30px" alt="Animated GIF" style="margin-bottom: 10px;">
                                </h3>
                                <div class="card">
                                    <img src="@article.Picture" class="card-img-top " alt="...">
                                    <div class="card-body">
                                        <h5 class="card-title">@article.Title</h5>
                                        <p class="card-text">@article.Description</p>
                                        <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="btn btn-primary">Read More</a>
                                    </div>
                                </div>
                            </div>
                        }
                    }
            </div>
                <br />
            <h2>Articles</h2>
                <br />
            @if (!User.Identity.IsAuthenticated)
            {
                <span class="text-muted" style="font-size: 16px;">(Login to see more! 👉)</span>
            }
            <div id="noResultsMessage" style="display: none; text-align: center;">
                <img src="/404.png" style="height: 75vh; display: inline-block;">
            </div>
                @foreach (var article in Model.Where(a => User.Identity.IsAuthenticated || !a.isPrivate).Where(b => b.isDisabled == false))
                {
                    <div class="col-6 col-md-4 mb-3 mt-3 category-article" data-category="@article.Category" data-created-at="@article.CreatedAt">
                        <div class="card">
                            <img src="@article.Picture" class="card-img-top" alt="..." style="height: 200px; object-fit: cover;">
                            <div class="card-body">
                                <h5 class="card-title">@article.Title</h5>
                                <p class="card-text">@article.Description</p>
                                <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="btn btn-secondary w-50">Read More</a>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <button class="btn btn-warning star-button w-25" data-article-id="@article.ArticleId">
                                        <i class="fa fa-star"></i> Star
                                    </button>
                                }
                                @if (User.Identity.IsAuthenticated && User.Identity.Name == article.UserName)
                                {
                                    <a href="@Url.Action("Edit", "Article", new { id = article.ArticleId })">
                                        <svg xmlns="http://www.w3.org/2000/svg" height="1.5rem" viewBox="0 0 512 512">
                                            <style>
                                                svg {
                                                    fill: #56585d
                                                }
                                            </style>
                                            <path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z" />
                                        </svg>
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
        </div>
    </div>
</div>
<div class="col-md-12 mt-4">
    <!--Recent Articles-->
    <h2>Recent Articles</h2>
        @if (!User.Identity.IsAuthenticated)
        {
            <span class="text-muted" style="font-size: 16px;">(Login to see more! 👉)</span>
        }
    <div class="overflow-container" style="white-space: nowrap;">
        <div class="row">
                @foreach (var article in Model.OrderByDescending(a => a.CreatedAt).Take(3).Where(a => User.Identity.IsAuthenticated || !a.isPrivate && a.isDisabled != false))
                {
                    <div class="col-4 mb-3 ">
                        <div class="card">
                        <img src="@article.Picture" class="card-img-top" alt="..." style="height: 200px; object-fit: cover;">
                        <div class="card-body" style="max-height: 200px; overflow: hidden;">
                            <h5 class="card-title">@article.Title</h5>
                            <p class="card-text" style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">@article.Description</p>
                                <p class="card-text">
                                    <svg class="svg_star" xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 576 512">
                                        <style>
                                            .svg_star {
                                                fill: #fff700!important
                                            }</style>
                                        <path d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z" />
                                    </svg> <span class="star-count" data-article-id="@article.ArticleId">@article.Stars</span>
                                </p>
                                <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="btn btn-primary">Read More</a>
                        </div>
                        </div>
                    </div>
                }
        </div>
    </div>
    <!-- Top 3 Articles -->
    <h2>Top 3 Articles</h2>
    @if (!User.Identity.IsAuthenticated)
    {
        <span class="text-muted" style="font-size: 16px;">(Login to see more! 👉)</span>
    }
    <div class="overflow-container" style="white-space: nowrap;">
        <div class="row">
                @foreach (var article in Model.OrderByDescending(a => a.Stars).Take(3).Where(a => User.Identity.IsAuthenticated || !a.isPrivate && a.isDisabled != false))
                {
                    <div class="col-4 mb-3 ">
                        <div class="card">
                            <img src="@article.Picture" class="card-img-top" alt="..." style="height: 200px; object-fit: cover;">
                            <div class="card-body" style="max-height: 200px; overflow: hidden;">
                                <h5 class="card-title">@article.Title</h5>
                                <p class="card-text" style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">@article.Description</p>
                                <p class="card-text">
                                <svg class="svg_star" xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 576 512">
                                        <style>
                                        .svg_star { 
                                            fill: #fff700
                                            }</style>
                                        <path d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z" />
                                    </svg> <span class="star-count" data-article-id="@article.ArticleId">@article.Stars</span>
                                </p>
                            <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="btn btn-primary">Read More</a>

                            </div>
                        </div>
                    </div>
                }
        </div>
    </div>
</div>
</div>
<style>
    .card-title,
    .card-text {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .sticky-image {
        position: fixed;
        bottom: 10px;
        right: 10px;
        z-index: 1000;
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    $(document).ready(function () {
        $('.category-link').click(function (e) {
            e.preventDefault();
            var category = $(this).data('category');
            filterArticlesByCategory(category);
        });

        $('#searchButton').click(function () {
            var searchTerm = $('#searchTerm').val();
            filterArticlesByTitle(searchTerm);
        });

        $('#yearPicker').change(function () {
            var selectedYear = $(this).val();
            filterArticlesByYear(selectedYear);
        });

        $('#monthPicker').change(function () {
            var selectedMonth = $(this).val();
            filterArticlesByMonth(selectedMonth);
        });

        $('.star-button').click(function (e) {
            e.preventDefault();

            $(this).prop('disabled', true);

            var articleId = $(this).data('article-id');
            var starCountElement = $('.star-count[data-article-id="' + articleId + '"]');
            var isStarred = $(this).hasClass('btn-warning');

            $.ajax({
                url: '@Url.Action("ToggleStar", "Article")',
                type: 'POST',
                data: { articleId: articleId, isStarred: isStarred },
                success: function (data) {
                    starCountElement.text(data.starCount);

                    if (data.starCount > 0) {
                        $('.star-button[data-article-id="' + articleId + '"]').removeClass('btn-outline-warning').addClass('btn-warning');
                    } else {
                        $('.star-button[data-article-id="' + articleId + '"]').removeClass('btn-warning').addClass('btn-outline-warning');
                    }
                },
                error: function () {
                },
                complete: function () {
                    $('.star-button[data-article-id="' + articleId + '"]').prop('disabled', false);
                }
            });
        });

        function filterArticlesByCategory(category) {
            // Hide all articles initially
            $('.category-article').hide();
            $('#noResultsMessage').hide();

            // Show top 3 articles regardless of the category
            $('.overflow-container .category-article').slice(0, 3).show();

            // Show articles based on the selected category
            if (category === 'all') {
                $('.category-article').show(); // Show all articles for "All" category
            } else {
                $('.category-article[data-category="' + category + '"]').show();
            }
        }

        function filterArticlesByYear(selectedYear) {
            $('#noResultsMessage').hide();
            // Hide all articles initially
            $('.category-article').hide();

            var articlesForYear = false;

            // Show articles based on the selected year
            $('.category-article').each(function () {
                var articleCreatedAt = $(this).data('created-at');
                var articleYear = new Date(articleCreatedAt).getFullYear().toString();
                console.log("articleCreatedAt" + articleCreatedAt);
                console.log("articleYear" + articleYear);
                if (articleYear === selectedYear) {
                    articlesForYear = true;
                    $(this).show();

                    // Show Hot Article if not already shown and available
                    var hotArticleShown = false;
                    if (!hotArticleShown) {
                        $('.category-article h3:contains("Hot Article")').closest('.category-article').show();
                    }
                }
            });


            // Show noResultsMessage if there are no articles for the selected year
            if (!articlesForYear) {
                $('#noResultsMessage').show();
            }

            // Show top 3 articles regardless of the category
            $('.overflow-container .category-article').slice(0, 3).show();
        }

        function filterArticlesByMonth(selectedMonth) {
            // Hide all articles initially
            $('.category-article').hide();
            $('#noResultsMessage').hide();

            // Check if there are articles for the selected month
            var articlesForMonth = false;

            // Show articles based on the selected month
            $('.category-article').each(function () {
                var articleMonth = new Date($(this).data('created-at')).getMonth() + 1; // Months are 0-based
                if (articleMonth.toString() === selectedMonth) {
                    articlesForMonth = true
                    $(this).show();

                    // Show Hot Article if not already shown and available
                    var hotArticleShown = false;
                    if (!hotArticleShown) {
                        $('.category-article h3:contains("Hot Article")').closest('.category-article').show();
                    }
                }
            });

            // Show noResultsMessage if there are no articles for the selected year
            if (!articlesForMonth) {
                $('#noResultsMessage').show();
            }
            // Show top 3 articles regardless of the category
            $('.overflow-container .category-article').slice(0, 3).show();
        }

        function filterArticlesByTitle(title) {
            $('.category-article').hide();

            $('.overflow-container .category-article').slice(0, 3).show();

            var matchingCount = 0;

            $('.category-article').each(function () {
                var articleTitle = $(this).find('.card-title').text().toLowerCase();
                if (articleTitle.includes(title.toLowerCase())) {
                    $(this).show();
                    matchingCount++;
                }
            });

            if (matchingCount === 0) {
                $('#noResultsMessage').show();
            } else {
                $('#noResultsMessage').hide();
            }
        }
    });
</script>